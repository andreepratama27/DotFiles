map <F2> :NERDTreeToggle<CR>

set t_ZH=
set t_ZR=

highlight Comment cterm=italic

set fillchars+=vert:│                           " Make split border nicer

hi VertSplit ctermbg=NONE guibg=NONE

set laststatus=2
set complete=.,w,u,b                            " Set autocomplete
set display+=lastline                           " Hide @ symbol when screen
set showcmd                                     " Show pressed command

"------------- Buffer -------------"
set hidden                                      " Force switch buffer
"Set autowriteall                               " Automatically write the file when switching buffer

set wrap                                        " Set wordwrap
let &showbreak = '↳ '

set number                                      " Show number
" set relativenumber                              " Set relativenumber

"------------- Clipboard -------------"
set clipboard=unnamed                       " Set clipboard to able to copy from and to system clipboard

"------------- Indentation -------------"
set tabstop=2
set shiftwidth=2
set softtabstop=2
set expandtab
set backspace=indent,eol,start                  " Make Backspace behave like another text editor
set autoindent
set smartindent
set smarttab
set breakindent
set copyindent
set shiftround
set list                                        " Display whitespace char

set nowrap
let g:enabled_bold_font=1
let g:user_emmet_expandabbr_key='<Tab>'
imap <expr> <tab> emmet#expandAbbrIntelligent("\<tab>")
autocmd BufNewFile,BufRead *.slim setlocal filetype=slim
autocmd BufRead,BufNewFile *.es6 setlocal filetype=javascript
au InsertLeave * set nopaste
let g:syntastic_javascript_checkers=['eslint']

" switch buffer with tab
nnoremap  <silent>   <tab>  :if &modifiable && !&readonly && &modified <CR> :write<CR> :endif<CR>:bnext<CR>
nnoremap  <silent> <s-tab>  :if &modifiable && !&readonly && &modified <CR> :write<CR> :endif<CR>:bprevious<CR>

"------------- End of custom options -----------""

" vim-javascript
let g:javascript_enable_domhtmlcss = 1
augroup vimrc-javascript
  autocmd!
  autocmd FileType javascript set tabstop=2|set shiftwidth=2|set expandtab softtabstop=2 smartindent
augroup END
"
"------------- Split Option -------------"
set splitright                                  " New vsplit in the right of current
set splitbelow                                  " New split below current
set completeopt-=menu                           " Disable scratch preview window

"------------- Searching -------------"
set ignorecase                                  " Make search insensitive
set hlsearch
set incsearch                                   " Move cursor before hit enter
set showmatch
set smartcase

" Remove search higlight when hit escape
nnoremap <silent> <esc><esc> :noh<cr>

" Make Navigation split easier
nmap <C-H> <C-W><C-H>
nmap <C-J> <C-W><C-J>
nmap <C-K> <C-W><C-K>
nmap <C-L> <C-W><C-L>
imap jj <ESC>
nmap B ^
nmap E $

">> js beatify <<"
map <c-f> :call JsBeautify()<cr>

autocmd FileType javascript noremap <buffer>  <c-f> :call JsBeautify()<cr>
" for json
autocmd FileType json noremap <buffer> <c-f> :call JsonBeautify()<cr>
" for jsx
autocmd FileType jsx noremap <buffer> <c-f> :call JsxBeautify()<cr>
" for html
autocmd FileType html noremap <buffer> <c-f> :call HtmlBeautify()<cr>
" for css or scss
autocmd FileType css noremap <buffer> <c-f> :call CSSBeautify()<cr>

">> Markdown preview <<"
" Use github flavored markdown style
let vim_markdown_preview_github=1
let vim_markdown_preview_temp_file=1
let vim_markdown_preview_toggle=1
let vim_markdown_preview_browser='Google Chrome'

let vim_markdown_preview_hotkey='<C-m>'

let g:ctrlp_custom_ignore = 'node_modules\|DS_Store\|git'
